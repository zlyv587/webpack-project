"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

Object.defineProperty(exports, "__esModule", {
  value: true
});

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { var callNext = step.bind(null, "next"); var callThrow = step.bind(null, "throw"); function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(callNext, callThrow); } } callNext(); }); }; }

function _typeof(obj) { return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Thing = exports.Thing = (function () {
  function Thing(name) {
    _classCallCheck(this, Thing);

    if (!(typeof name === 'string')) {
      throw new TypeError("Value of argument \"name\" violates contract, expected string got " + (name === null ? 'null' : (typeof name === "undefined" ? "undefined" : _typeof(name)) === 'object' && name.constructor ? name.constructor.name || '[Unknown Object]' : typeof name === "undefined" ? "undefined" : _typeof(name)));
    }

    this.name = name;
  }

  _createClass(Thing, [{
    key: "go",
    value: (function () {
      var ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(age) {
        var _ref;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _ref = function _ref(_id) {
                  if (!(Array.isArray(_id) && _id.length >= 2 && typeof _id[0] === 'string' && typeof _id[1] === 'number')) {
                    throw new TypeError("Function return value violates contract, expected [string, number] got " + (_id === null ? 'null' : (typeof _id === "undefined" ? "undefined" : _typeof(_id)) === 'object' && _id.constructor ? _id.constructor.name || '[Unknown Object]' : typeof _id === "undefined" ? "undefined" : _typeof(_id)));
                  }

                  return _id;
                };

                if (typeof age === 'number') {
                  _context.next = 3;
                  break;
                }

                throw new TypeError("Value of argument \"age\" violates contract, expected number got " + (age === null ? 'null' : (typeof age === "undefined" ? "undefined" : _typeof(age)) === 'object' && age.constructor ? age.constructor.name || '[Unknown Object]' : typeof age === "undefined" ? "undefined" : _typeof(age)));

              case 3:
                return _context.abrupt("return", _ref([this.name, age]));

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      return function go(_x) {
        return ref.apply(this, arguments);
      };
    })()
  }]);

  return Thing;
})();

exports.default = (function () {
  var ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(input) {
    var _ref2, thing, result;

    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _ref2 = function _ref2(_id2) {
              if (!(Array.isArray(_id2) && _id2.length >= 2 && typeof _id2[0] === 'string' && typeof _id2[1] === 'number')) {
                throw new TypeError("Function \"demo\" return value violates contract, expected [string, number] got " + (_id2 === null ? 'null' : (typeof _id2 === "undefined" ? "undefined" : _typeof(_id2)) === 'object' && _id2.constructor ? _id2.constructor.name || '[Unknown Object]' : typeof _id2 === "undefined" ? "undefined" : _typeof(_id2)));
              }

              return _id2;
            };

            if (Array.isArray(input) && input.every(function (item) {
              return typeof item === 'string';
            })) {
              _context2.next = 3;
              break;
            }

            throw new TypeError("Value of argument \"input\" violates contract, expected string[] got " + (input === null ? 'null' : (typeof input === "undefined" ? "undefined" : _typeof(input)) === 'object' && input.constructor ? input.constructor.name || '[Unknown Object]' : typeof input === "undefined" ? "undefined" : _typeof(input)));

          case 3:
            thing = new Thing(input[0]);
            _context2.next = 6;
            return thing.go(88);

          case 6:
            result = _context2.sent;
            return _context2.abrupt("return", _ref2(result));

          case 8:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function demo(_x2) {
    return ref.apply(this, arguments);
  };
})();