"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = demo;

function _typeof(obj) { return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj; }

function demo() {
  var foo = [];

  if (!(Array.isArray(foo) && foo.every(function (item) {
    return typeof item === 'string';
  }))) {
    throw new TypeError("Value of variable \"foo\" violates contract, expected Array<string> got " + (foo === null ? 'null' : (typeof foo === "undefined" ? "undefined" : _typeof(foo)) === 'object' && foo.constructor ? foo.constructor.name || '[Unknown Object]' : typeof foo === "undefined" ? "undefined" : _typeof(foo)));
  }

  var total = 0;

  if (!(foo && typeof foo[Symbol.iterator] === 'function')) {
    throw new TypeError("Expected foo to be iterable, got " + (foo === null ? 'null' : (typeof foo === "undefined" ? "undefined" : _typeof(foo)) === 'object' && foo.constructor ? foo.constructor.name || '[Unknown Object]' : typeof foo === "undefined" ? "undefined" : _typeof(foo)));
  }

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = foo[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var _bar = _step.value;

      if (!(typeof _bar === 'string')) {
        throw new TypeError("Value of variable \"bar\" violates contract, expected string got " + (_bar === null ? 'null' : (typeof _bar === "undefined" ? "undefined" : _typeof(_bar)) === 'object' && _bar.constructor ? _bar.constructor.name || '[Unknown Object]' : typeof _bar === "undefined" ? "undefined" : _typeof(_bar)));
      }

      total += foo.length;
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  if (!(foo && typeof foo[Symbol.iterator] === 'function')) {
    throw new TypeError("Expected foo to be iterable, got " + (foo === null ? 'null' : (typeof foo === "undefined" ? "undefined" : _typeof(foo)) === 'object' && foo.constructor ? foo.constructor.name || '[Unknown Object]' : typeof foo === "undefined" ? "undefined" : _typeof(foo)));
  }

  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    for (var _iterator2 = foo[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var _bar2 = _step2.value;

      if (!(typeof _bar2 === 'string')) {
        throw new TypeError("Value of variable \"bar\" violates contract, expected string got " + (_bar2 === null ? 'null' : (typeof _bar2 === "undefined" ? "undefined" : _typeof(_bar2)) === 'object' && _bar2.constructor ? _bar2.constructor.name || '[Unknown Object]' : typeof _bar2 === "undefined" ? "undefined" : _typeof(_bar2)));
      }

      total += foo.length;
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }

  for (var i = 0, _blah = ["a", "b", "c"].join(); i < foo.length; i++) {
    if (!(typeof _blah === 'string')) {
      throw new TypeError("Value of variable \"blah\" violates contract, expected string got " + (_blah === null ? 'null' : (typeof _blah === "undefined" ? "undefined" : _typeof(_blah)) === 'object' && _blah.constructor ? _blah.constructor.name || '[Unknown Object]' : typeof _blah === "undefined" ? "undefined" : _typeof(_blah)));
    }

    total += foo.length;
  }

  for (var prop in demo) {
    total += prop.length;
  }
  return total;
}