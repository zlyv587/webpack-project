"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = demo;

function _typeof(obj) { return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var got = [];

var Foo = (function () {
  function Foo() {
    _classCallCheck(this, Foo);

    this.foo = ["a", "b", "c"];
  }

  _createClass(Foo, [{
    key: "myFunction",
    value: function myFunction() {
      _foo = this.foo;

      if (!(_foo && typeof _foo[Symbol.iterator] === 'function')) {
        throw new TypeError("Expected _foo to be iterable, got " + (_foo === null ? 'null' : (typeof _foo === "undefined" ? "undefined" : _typeof(_foo)) === 'object' && _foo.constructor ? _foo.constructor.name || '[Unknown Object]' : typeof _foo === "undefined" ? "undefined" : _typeof(_foo)));
      }

      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = _foo[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var _foo;

          var _f = _step.value;

          if (!(typeof _f === 'string')) {
            throw new TypeError("Value of variable \"f\" violates contract, expected string got " + (_f === null ? 'null' : (typeof _f === "undefined" ? "undefined" : _typeof(_f)) === 'object' && _f.constructor ? _f.constructor.name || '[Unknown Object]' : typeof _f === "undefined" ? "undefined" : _typeof(_f)));
          }

          got.push(_f);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
  }, {
    key: "myFunction2",
    value: function myFunction2() {
      _foo2 = this.foo;

      if (!(_foo2 && typeof _foo2[Symbol.iterator] === 'function')) {
        throw new TypeError("Expected _foo2 to be iterable, got " + (_foo2 === null ? 'null' : (typeof _foo2 === "undefined" ? "undefined" : _typeof(_foo2)) === 'object' && _foo2.constructor ? _foo2.constructor.name || '[Unknown Object]' : typeof _foo2 === "undefined" ? "undefined" : _typeof(_foo2)));
      }

      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = _foo2[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var _foo2;

          f = _step2.value;

          got.push(f);
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      var f;
    }
  }]);

  return Foo;
})();

function demo() {
  function _ref3(_id3) {
    if (!(Array.isArray(_id3) && _id3.every(function (item) {
      return typeof item === 'string';
    }))) {
      throw new TypeError("Function \"demo\" return value violates contract, expected string[] got " + (_id3 === null ? 'null' : (typeof _id3 === "undefined" ? "undefined" : _typeof(_id3)) === 'object' && _id3.constructor ? _id3.constructor.name || '[Unknown Object]' : typeof _id3 === "undefined" ? "undefined" : _typeof(_id3)));
    }

    return _id3;
  }

  var foo = new Foo();
  foo.myFunction();
  foo.myFunction2();
  return _ref3(got);
}