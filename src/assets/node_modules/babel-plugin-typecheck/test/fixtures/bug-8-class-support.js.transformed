"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = test;

function _typeof(obj) { return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Foo = (function () {
  function Foo() {
    _classCallCheck(this, Foo);
  }

  _createClass(Foo, [{
    key: "bar",
    value: function bar(v) {
      if (!(typeof v === 'string')) {
        throw new TypeError("Value of argument \"v\" violates contract, expected string got " + (v === null ? 'null' : (typeof v === "undefined" ? "undefined" : _typeof(v)) === 'object' && v.constructor ? v.constructor.name || '[Unknown Object]' : typeof v === "undefined" ? "undefined" : _typeof(v)));
      }
    }
  }]);

  return Foo;
})();

function test() {
  var x = new Foo();
  x.bar("hello world");
}