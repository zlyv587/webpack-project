"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = demo;

function _typeof(obj) { return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var User = function User(name) {
  _classCallCheck(this, User);

  if (!(typeof name === 'string')) {
    throw new TypeError("Value of argument \"name\" violates contract, expected string got " + (name === null ? 'null' : (typeof name === "undefined" ? "undefined" : _typeof(name)) === 'object' && name.constructor ? name.constructor.name || '[Unknown Object]' : typeof name === "undefined" ? "undefined" : _typeof(name)));
  }

  this.name = name;
};

function demo(name) {
  if (!(typeof name === 'string')) {
    throw new TypeError("Value of argument \"name\" violates contract, expected string got " + (name === null ? 'null' : (typeof name === "undefined" ? "undefined" : _typeof(name)) === 'object' && name.constructor ? name.constructor.name || '[Unknown Object]' : typeof name === "undefined" ? "undefined" : _typeof(name)));
  }

  var user = undefined;

  if (!(user == null || user instanceof User)) {
    throw new TypeError("Value of variable \"user\" violates contract, expected ?User got " + (user === null ? 'null' : (typeof user === "undefined" ? "undefined" : _typeof(user)) === 'object' && user.constructor ? user.constructor.name || '[Unknown Object]' : typeof user === "undefined" ? "undefined" : _typeof(user)));
  }

  (function () {
    user = new User(name);
  })();
  return user;
}