"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = demo;

function _typeof(obj) { return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj; }

function demo(input) {
  var a = input;

  if (!Array.isArray(a)) {
    throw new TypeError("Value of variable \"a\" violates contract, expected Array got " + (a === null ? 'null' : (typeof a === "undefined" ? "undefined" : _typeof(a)) === 'object' && a.constructor ? a.constructor.name || '[Unknown Object]' : typeof a === "undefined" ? "undefined" : _typeof(a)));
  }

  if (!(a && typeof a[Symbol.iterator] === 'function')) {
    throw new TypeError("Expected a to be iterable, got " + (a === null ? 'null' : (typeof a === "undefined" ? "undefined" : _typeof(a)) === 'object' && a.constructor ? a.constructor.name || '[Unknown Object]' : typeof a === "undefined" ? "undefined" : _typeof(a)));
  }

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = a[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var _b = _step.value;

      if (!(typeof _b === 'string')) {
        throw new TypeError("Value of variable \"b\" violates contract, expected string got " + (_b === null ? 'null' : (typeof _b === "undefined" ? "undefined" : _typeof(_b)) === 'object' && _b.constructor ? _b.constructor.name || '[Unknown Object]' : typeof _b === "undefined" ? "undefined" : _typeof(_b)));
      }

      var c = _b;
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }
}